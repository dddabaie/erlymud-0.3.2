#############################################################################
#
#  INSTALL TARGET SYSTEM (FIRST TIME ONLY)
#
#############################################################################

# Compile the entire system
$ ./rebar compile

# Start Erlang with path to ebin/ of all applications
$ erl -pa tcp_interface/ebin

# If you like, test it first; generate a local .boot / .script
> % systools:make_script("erlymud-0.3.0", [local]).

# In case you get error messages related to application versions, put the
# right versions in the .rel file

# ..and then start the system locally
$ erl -boot ./erlymud-0.3.0

# Generate a release package and install it
> c(target_system).
> target_system:create("erlymud-0.3.0").
> target_system:install("erlymud-0.3.0", "/usr/local/erlymud").

# Start the target system
$ /usr/local/erlymud/bin/start

# Test it..
$ telnet localhost 1155


#############################################################################
#
#  MAKE CHANGES
#
#############################################################################

# ** Prepare for work on new release **

# Make new oldvsn directory for old version:
$ mkdir oldvsn/0.3.0

# Make new .rel file and move old one to oldvsn/:
$ cp erlymud-0.3.0.rel erlymud-0.3.1.rel
$ hg mv erlymud-0.3.0.rel oldvsn/0.3.0/

# Copy old .app / .appup / relup file(s) to oldvsn/:
$ cp lib/*/ebin/*.app* oldvsn/0.3.0/
$ cp relup oldvsn/0.3.0/

# Update version number of new .rel file
$ vi erlymud-0.3.1.rel
... {"erlymud", "0.3.1"}, ...

# Update version number in .app.src file
$ vi lib/erlymud/src/erlymud.app.src
... {vsn, "0.3.1"}, ...

# Update version number in welcome message
$ vi lib/erlymud/src/em_rh_login.erl
... "\nWelcome to ErlyMUD 0.3.1\n\n" ...

# *** Make changes ***

# Make changes in the relevant files

# *** Prepare for upgrade ***

# Update version number of .app[.src] files in changed applications
# Create/modify ebin/<app_name>.appup file(s) for applications that changed
# - for example, a lib/erlymud/ebin/erlymud.appup which will only reload
#   the em_rh_login module which contains above welcome message:
$ cat > lib/erlymud/ebin/erlymud.appup
{"0.3.1",
 [{"0.3.0", [{load_module, em_rh_login}]}],
 [{"0.3.0", [{load_module, em_rh_login}]}]
}.

# Generate relup file; note need to provide path to previous versions of .app files:
> systools:make_relup("erlymud-0.3.1", ["erlymud-0.3.0"], ["erlymud-0.3.0"], 
    [{path, ["oldvsn/*/"]}]).


#############################################################################
#
#  UPGRADE TARGET SYSTEM
#
#############################################################################

# Compile changes
$ ./rebar compile

# Create release package
> target_system:create("erlymud-0.3.1").

# Copy release package to target system
$ cp erlymud-0.3.1.tar.gz /usr/local/erlymud/releases/

# Connect to target system
$ /usr/local/erlymud/bin/to_erl
Attaching to /tmp/erlang.pipe.3 (^D to exit)

>

# Unpack release package
> release_handler:unpack_release("erlymud-0.3.1").
{ok,"0.3.1"}

# Install new release
> release_handler:install_release("0.3.1").
{ok,"0.3.0",[]}

# If everything is OK, make new release permanent; otherwise, 
# the old one will be used at reboot
> release_handler:make_permanent("0.3.1").
ok

